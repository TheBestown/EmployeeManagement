name: Deploy to Server

on:
  push:
    branches:
      - development

jobs:
  build:
    runs-on: self-hosted

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: '8.0.x'

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --configuration Release --no-restore

    - name: Publish
      run: dotnet publish --configuration Release --no-build --output ./output

    - name: Set up SSH key
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.SERVER_SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        echo "${{ secrets.SSH_KNOWN_HOSTS }}" > ~/.ssh/known_hosts
        chmod 644 ~/.ssh/known_hosts
        eval $(ssh-agent -s)
        echo "${{ secrets.SERVER_SSH_PASSPHRASE }}" | ssh-add ~/.ssh/id_rsa
      env:
        SSH_PASSPHRASE: ${{ secrets.SERVER_SSH_PASSPHRASE }}
        
    - name: Deploy to server
      run: |
        scp -P $SERVER_SSH_PORT -r ./output $SERVER_USERNAME@$SERVER_IP:/var/www/EmployeeApp
        ssh -p $SERVER_SSH_PORT $SERVER_USERNAME@$SERVER_IP 'sudo systemctl restart EmployeeApp.service'
      env:
        SSH_PRIVATE_KEY: ${{ secrets.SERVER_SSH_PRIVATE_KEY }}
        SSH_KNOWN_HOSTS: ${{ secrets.SSH_KNOWN_HOSTS }}
        SERVER_IP: ${{ secrets.SERVER_IP }}
        SERVER_SSH_PORT: ${{ secrets.SERVER_SSH_PORT }}
        SERVER_USERNAME: ${{ secrets.SERVER_USERNAME }}
